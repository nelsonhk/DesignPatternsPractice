1. What design principles does this code violate?
    This code violates the Avoid Code Duplication principle and also violates the principles
    of Decomposition/Single Responsibility principle.
2. Refactor the code to improve its design.


public void getTimes(Properties props) throws Exception {
  int checkInterval;
  int monitorTime;
  int departureOffset;

  String intervalValueString = getValueString("interval");
  validateValueString("interval", intervalValueString);
  int intervalValue = Integer.parseInt(intervalValueString);
  validateValue(intervalValue, "monitor interval > 0");

  checkInterval = intervalValue;

  String durationValueString = getValueString("duration");
  validateValueString("duration", durationValueString);
  int durationValue = Integer.parseInt(durationValueString);
  validateValue(durationValue, "duration > 0");
  checkValueInterval(durationValue, checkInterval, "duration")

  monitorTime = durationValue;

  String departureValueString = getValueString("departure");
  validateValueString("departure", departureValueString);
  int departureValue = Integer.parseInt(departureValueString);
  validateValue(departureValue, "departure > 0");
  checkValueInterval(departureValue, checkInterval, "departure");

  departureOffset = departureValue;
}

private String getValueString(String property) {
    String valueString = props.getProperty(property);
}

private void validateValueString(String property, String valueString) {
    if (valueString == null) {
        if (property == "interval") {
            throwError("monitor interval");
        } else if (property == "duration") {
            throwError("duration");
        } else if (
    }
}

private void validateValue(int value) {
    if (value <= 0) {
        throwError(errorMessage)
    }
}

private void throwError(String errorMessage) {
    throw new MissingPropertiesException(errorMessage);
}

private void checkValueInterval(int value, int checkInterval, String property) {
    if ((value % checkInterval) != 0) {
        throwError(property + " % checkInterval");
    }
}

